---
title: "Islandty - home"
metaDesc: "Using Eleventy to act as a digital asset management system"
layout: 'layouts/home.html'
intro:
  eyebrow: "An Alexander and Rosie project"
  main: 'Islandty'
  summary: 'The tiniest DAMS powered by a CSV.'
  buttonText: 'Example'
  buttonUrl: '/islandora/object/24'
  image: 'images/spreadsheet.png'
  imageAlt: 'Screenshot of data in Google Sheets.'
primaryCTA:
  title: "Islandora"
  summary: "This project is a spin-off of our work with Islandora. If you want a full Drupal stack, check them out."
  buttonText: 'Islandora.ca'
  buttonUrl: 'https://islandora.ca/'
secondaryCTA:
  title: "Eleventy"
  summary: "Islandty uses the static site generator Eleventy. If you want to roll your own static site, check them out."
  buttonText: '11ty.dev'
  buttonUrl: 'https://www.11ty.dev'


---

<h1>Search the Repository</h1>

<div id="app">
	<input type="search" v-model="term" id="search"> <button @click="search" id="search-submit">Search</button>
	<div v-if="results">
		<h3>Search Results</h3>
		<ul>
			<li v-for="result in results">
				<a :href="result.url"> {% raw %}{{ result.title }}{% endraw %}</a>
			</li>
		</ul>
		<p v-if="noResults">
		Sorry, no results were found.
		</p>
	</div>
</div>

<script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
<script src="https://unpkg.com/lunr/lunr.js"></script>

<script>
const app = new Vue({
	el:'#app',
	data:{
		docs:null,
		idx:null,
		term:'',
		results:null
	},
	async created() {
		let resultLookup = await fetch('/index-lookup.json');
		this.docs = await resultLookup.json();

		let resultIndex = await fetch('/index.json');
		const indexstring = await resultIndex.json();
		this.idx = lunr.Index.load(indexstring);
	},
	computed: {
		noResults() {
			return this.results.length === 0;
		}
	},
	methods:{
		search() {
			console.log('search', this.term);
			let results = this.idx.search(this.term);

			// we need to add title, url from ref
			results.forEach(r => {
				r.title = this.docs[r.ref].title;
				r.url = this.docs[r.ref].url;
			});

			this.results = results;
		}
	}
});
</script>
<script>
	var input = document.getElementById("search");
	input.addEventListener("keypress", function(event) {
		if (event.key === "Enter") {
			event.preventDefault();
			document.getElementById("search-submit").click();
		}
	});

</script>

